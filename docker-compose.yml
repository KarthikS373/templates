version: "3.9"

services:
  nextjs:
    build:
      context: ./client
      dockerfile: Dockerfile.production
    env_file:
      - .env.production
    ports:
      - "3000:3000"

  django:
    build:
      context: ./api
      dockerfile: Dockerfile.production
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    depends_on:
      - db
      - queue
      - cache

  db:
    image: postgres:15.2-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

  queue:
    build:
      context: ./api
      dockerfile: Dockerfile.production
    container_name: celery_worker
    command: celery -A django worker --loglevel=info
    env_file:
      - .env.production
    depends_on:
      - db
      - cache

  cache:
    image: redis:6.2.7-alpine
    container_name: redis_cache
    restart: always
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
